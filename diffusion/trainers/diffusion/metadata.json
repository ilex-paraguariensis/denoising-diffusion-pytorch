{
    "name": "diffusion",
    "description": "Diffusion Probabilistic Models",
    "version": "",
    "author": "lucidrains",
    "license": "MIT",
    "url": "https://github.com/ilex-paraguariensis/denoising-diffusion-pytorch/tree/main/diffusion/trainers/diffusion/",
    "category": "",
    "backbone": "",
    "module_path": [
        "trainers",
        "diffusion"
    ],
    "hash": "c8454ef10b5706fc5b501237b2c7c6cd7a5d9d2c",
    "type": "trainers",
    "exports": {
        "classes": [
            {
                "class_name": "LightningDiffusionModule",
                "module": "trainers.diffusion",
                "params": {
                    "diffusion_model": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    },
                    "opt": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    },
                    "save_dir": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    }
                },
                "samples": [
                    {
                        "sample": {
                            "module": "trainers.diffusion",
                            "class_name": "LightningDiffusionModule",
                            "object_key": "pl_model",
                            "params": {
                                "diffusion_model": "{diffusion}",
                                "save_dir": "{save_dir}",
                                "opt": {
                                    "module": "torch.optim",
                                    "class_name": "Adam",
                                    "params": {
                                        "lr": 0.0001,
                                        "betas": [
                                            0.49,
                                            0.999
                                        ],
                                        "params": {
                                            "reference_key": "diffusion",
                                            "function_call": "parameters",
                                            "params": {}
                                        }
                                    }
                                }
                            }
                        },
                        "experiment": {
                            "data": {
                                "module": "data_loaders.cars.augmented",
                                "function": "get_dataloader",
                                "params": {
                                    "image_size": 256,
                                    "augment_horizontal_flip": true,
                                    "batch_size": 2,
                                    "data_dir": "./data/"
                                },
                                "object_key": "data"
                            },
                            "model": {
                                "module": "models.diffusion",
                                "class_name": "Unet",
                                "object_key": "model",
                                "params": {
                                    "dim": 64,
                                    "dim_mults": [
                                        1,
                                        2,
                                        4,
                                        8
                                    ]
                                }
                            },
                            "diffusion": {
                                "module": "models.diffusion",
                                "class_name": "GaussianDiffusion",
                                "object_key": "diffusion",
                                "params": {
                                    "model": "{model}",
                                    "image_size": 256,
                                    "timesteps": 1000,
                                    "loss_type": "l1"
                                }
                            },
                            "pytorch_lightning_module": {
                                "module": "trainers.diffusion",
                                "class_name": "LightningDiffusionModule",
                                "object_key": "pl_model",
                                "params": {
                                    "diffusion_model": "{diffusion}",
                                    "save_dir": "{save_dir}",
                                    "opt": {
                                        "module": "torch.optim",
                                        "class_name": "Adam",
                                        "params": {
                                            "lr": 0.0001,
                                            "betas": [
                                                0.49,
                                                0.999
                                            ],
                                            "params": {
                                                "reference_key": "diffusion",
                                                "function_call": "parameters",
                                                "params": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "trainer": {
                                "module": "pytorch_lightning",
                                "class_name": "Trainer",
                                "params": {
                                    "gpus": 1,
                                    "max_epochs": 100,
                                    "precision": 16,
                                    "gradient_clip_val": 0.5,
                                    "enable_checkpointing": true,
                                    "callbacks": [
                                        {
                                            "module": "pytorch_lightning.callbacks",
                                            "class_name": "ModelCheckpoint",
                                            "params": {
                                                "dirpath": "{save_dir}/checkpoints",
                                                "save_last": true,
                                                "mode": "min"
                                            }
                                        }
                                    ]
                                }
                            },
                            "override_params": true
                        }
                    }
                ],
                "errors": [
                    "Missing parameter diffusion_model. Hint: Add a default value or type annotation",
                    "Missing parameter opt. Hint: Add a default value or type annotation",
                    "Missing parameter save_dir. Hint: Add a default value or type annotation"
                ]
            },
            {
                "class_name": "MLDiffusionModule",
                "module": "trainers.diffusion",
                "params": {
                    "diffusion_model": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    },
                    "opt": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    },
                    "save_dir": {
                        "type": "unknown",
                        "description": "Unknown type, please add a type annotation or sample value"
                    }
                },
                "samples": [
                    {
                        "sample": {
                            "module": "trainers.diffusion",
                            "class_name": "MLDiffusionModule",
                            "object_key": "pl_model",
                            "params": {
                                "diffusion_model": "{diffusion}",
                                "save_dir": "{save_dir}",
                                "opt": {
                                    "module": "torch.optim",
                                    "class_name": "Adam",
                                    "params": {
                                        "lr": 0.0001,
                                        "betas": [
                                            0.49,
                                            0.999
                                        ],
                                        "params": {
                                            "reference_key": "diffusion",
                                            "function_call": "parameters",
                                            "params": {}
                                        }
                                    }
                                }
                            }
                        },
                        "experiment": {
                            "data": {
                                "module": "data.pl_module.mmnist.moving_mnist",
                                "class_name": "CustomDataModule",
                                "params": {
                                    "data_location": "./data",
                                    "train_batch_size": 4,
                                    "test_batch_size": 4,
                                    "in_seq_len": 10,
                                    "out_seq_len": 10,
                                    "image_size": 64
                                },
                                "object_key": "data"
                            },
                            "model": {
                                "module": "models.m_diffusion",
                                "class_name": "Unet",
                                "object_key": "model",
                                "params": {
                                    "dim": 64,
                                    "channels": 20,
                                    "dim_mults": [
                                        1,
                                        2,
                                        4,
                                        8
                                    ]
                                }
                            },
                            "diffusion": {
                                "module": "models.m_diffusion",
                                "class_name": "GaussianDiffusion",
                                "object_key": "diffusion",
                                "params": {
                                    "model": "{model}",
                                    "image_size": 64,
                                    "timesteps": 1000,
                                    "loss_type": "l1",
                                    "objective": "pred_x0"
                                }
                            },
                            "pytorch_lightning_module": {
                                "module": "trainers.diffusion",
                                "class_name": "MLDiffusionModule",
                                "object_key": "pl_model",
                                "params": {
                                    "diffusion_model": "{diffusion}",
                                    "save_dir": "{save_dir}",
                                    "opt": {
                                        "module": "torch.optim",
                                        "class_name": "Adam",
                                        "params": {
                                            "lr": 0.0001,
                                            "betas": [
                                                0.49,
                                                0.999
                                            ],
                                            "params": {
                                                "reference_key": "diffusion",
                                                "function_call": "parameters",
                                                "params": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "trainer": {
                                "module": "pytorch_lightning",
                                "class_name": "Trainer",
                                "params": {
                                    "gpus": 1,
                                    "max_epochs": 100,
                                    "precision": 16,
                                    "gradient_clip_val": 1,
                                    "enable_checkpointing": true,
                                    "callbacks": [
                                        {
                                            "module": "pytorch_lightning.callbacks",
                                            "class_name": "ModelCheckpoint",
                                            "params": {
                                                "dirpath": "{save_dir}/checkpoints",
                                                "save_last": true,
                                                "mode": "min"
                                            }
                                        }
                                    ]
                                }
                            },
                            "override_params": true
                        }
                    }
                ],
                "errors": [
                    "Missing parameter diffusion_model. Hint: Add a default value or type annotation",
                    "Missing parameter opt. Hint: Add a default value or type annotation",
                    "Missing parameter save_dir. Hint: Add a default value or type annotation"
                ],
                "returns": {
                    "class": "<class 'diffusion.trainers.diffusion.MLDiffusionModule.LightningDiffusionModule'>",
                    "module": "diffusion.trainers.diffusion.MLDiffusionModule",
                    "mro": [
                        "<class 'diffusion.trainers.diffusion.MLDiffusionModule.LightningDiffusionModule'>",
                        "<class 'pytorch_lightning.core.module.LightningModule'>",
                        "<class 'pytorch_lightning.core.mixins.device_dtype_mixin.DeviceDtypeModuleMixin'>",
                        "<class 'pytorch_lightning.core.mixins.hparams_mixin.HyperparametersMixin'>",
                        "<class 'pytorch_lightning.core.saving.ModelIO'>",
                        "<class 'pytorch_lightning.core.hooks.ModelHooks'>",
                        "<class 'pytorch_lightning.core.hooks.DataHooks'>",
                        "<class 'pytorch_lightning.core.hooks.CheckpointHooks'>",
                        "<class 'torch.nn.modules.module.Module'>",
                        "<class 'object'>"
                    ]
                }
            }
        ],
        "functions": []
    },
    "dependencies": {
        "pip": [
            {
                "name": "ipdb",
                "version": "0.13.9",
                "lastVersion": "0.13.9"
            },
            {
                "name": "pytorch_lightning",
                "version": "1.7.5",
                "lastVersion": "1.7.7"
            },
            {
                "name": "torchvision",
                "version": "0.13.1+cu116",
                "lastVersion": "0.13.1"
            },
            {
                "name": "torch",
                "version": "1.12.1+cu116",
                "lastVersion": "1.12.1"
            }
        ]
    }
}